{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Phonebook/Phonebook.module.css","components/Phonebook/Phonebook.jsx","components/Container/Container.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Phonebook","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","type","onChange","pattern","title","required","input","button","Component","Container","children","container","Contacts","data","onDeleteContact","list","map","id","listItem","onClick","Filter","propType","PropTypes","string","isRequired","func","App","contacts","filter","formSubmitHandler","normalizedName","toLowerCase","find","contact","toast","error","newContact","uuidv4","FilterHandler","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a74dea1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1dksZ\",\"input\":\"Filter_input__2j6Ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__N3lLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__Xg0f_\",\"label\":\"Phonebook_label__caja_\",\"input\":\"Phonebook_input__2B15C\",\"button\":\"Phonebook_button__1ijC3\"};","import React, { Component } from 'react';\nimport s from './Phonebook.module.css';\n\nclass Phonebook extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleInputChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className={s.form}>\n                <label className={s.label}>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.handleInputChange}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        className={s.input}\n                    />\n                </label>\n                <label className={s.label}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={this.state.number}\n                        onChange={this.handleInputChange}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        className={s.input}\n                    />\n                </label>\n                <button type=\"submit\" className={s.button}>\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Phonebook;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\nconst Container = ({ children }) => (\n    <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nconst Contacts = ({ data, onDeleteContact }) => (\n    <ul className={s.list}>\n        {data.map(({ id, name, number }) => {\n            return (\n                <li key={id} className={s.listItem}>\n                    <p className={s.name}>\n                        {name}: <span className={s.number}>{number}</span>\n                    </p>\n                    <button\n                        className={s.button}\n                        onClick={() => onDeleteContact(id)}\n                    >\n                        Delete\n                    </button>\n                </li>\n            );\n        })}\n    </ul>\n);\n\nContacts.propTypes = {\n    data: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.string.isRequired,\n                name: PropTypes.string.isRequired,\n                number: PropTypes.string.isRequired,\n            }),\n        ),\n        PropTypes.array,\n    ]),\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n    <label className={s.label}>\n        Find contact by name\n        <input\n            className={s.input}\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        ></input>\n    </label>\n);\n\nFilter.propType = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Container from './components/Container/Container';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parsedContacts = JSON.parse(contacts);\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    formSubmitHandler = ({ name, number }) => {\n        const normalizedName = name.toLowerCase();\n\n        const checkedForName = this.state.contacts.find(\n            contact => normalizedName === contact.name.toLowerCase(),\n        );\n\n        if (checkedForName) {\n            return toast.error(`${name} is already in contacts`);\n        }\n\n        const newContact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n\n        this.setState(({ contacts }) => ({\n            contacts: [newContact, ...contacts],\n        }));\n    };\n\n    FilterHandler = ({ name }) => {\n        this.setState({ filter: name });\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    deleteContact = contactId => {\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== contactId),\n        }));\n    };\n\n    render() {\n        const { contacts, filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <Phonebook\n                    onSubmit={this.formSubmitHandler}\n                    contacts={contacts}\n                />\n                <h2>Contacts</h2>\n                <ToastContainer />\n                <Filter value={filter} onChange={this.changeFilter} />\n                <Contacts\n                    data={visibleContacts}\n                    onDeleteContact={this.deleteContact}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1FPUf\",\"listItem\":\"Contacts_listItem__2965m\",\"name\":\"Contacts_name__1hv--\",\"number\":\"Contacts_number__1j9f9\",\"button\":\"Contacts_button__2mPFQ\"};"],"sourceRoot":""}